name: Deploy

on:
  push:
    branches:
      - main

env:
  GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
  REGION: asia-northeast1
  BUCKET_NAME: pokemon-card-deck-scraper
  ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.DEPLOY_SA_KEY }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Docker image
        run: |
          REPOSITORY=${{ env.REGION }}-docker.pkg.dev/${{ env.GOOGLE_PROJECT_ID }}/pokemon-card-deck-scraper
          IMAGE=${REPOSITORY}/pokemon-card-deck-scraper:latest
          docker pull ${IMAGE} || true
          docker build --cache-from ${IMAGE} -t ${IMAGE} .
          docker push ${IMAGE}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy pokemon-card-deck-scraper \
            --region ${{ env.REGION }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.GOOGLE_PROJECT_ID }}/pokemon-card-deck-scraper/pokemon-card-deck-scraper:latest \
            --platform managed \
            --set-env-vars BUCKET_NAME=${{ env.BUCKET_NAME }} \
            --set-env-vars CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }} \
            --set-env-vars CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }} \
            --set-env-vars API_TOKEN=${{ secrets.API_TOKEN }} \
